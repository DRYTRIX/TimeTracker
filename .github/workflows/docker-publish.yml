name: Build and Publish TimeTracker Docker Image

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: drytrix/timetracker

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          - name: amd64
            platform: linux/amd64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Debug - List files
        run: |
          pwd
          ls -la
          echo "--- Dockerfile content ---"
          cat Dockerfile | head -10
          echo "--- File encoding check ---"
          file Dockerfile
          echo "--- Line endings check ---"
          hexdump -C Dockerfile | head -20

      - name: Fix line endings
        run: |
          # Convert Windows line endings to Unix
          dos2unix Dockerfile || true
          # Ensure proper permissions
          chmod 644 Dockerfile
          echo "--- After fixing line endings ---"
          file Dockerfile
          hexdump -C Dockerfile | head -20

      - name: Create clean Dockerfile
        run: |
          cat > Dockerfile.clean << 'EOF'
          FROM python:3.11-slim
          WORKDIR /app
          COPY requirements.txt .
          RUN pip install --no-cache-dir -r requirements.txt
          COPY . .
          EXPOSE 8080
          CMD ["python", "app.py"]
          EOF
          
          echo "--- Created Dockerfile.clean ---"
          cat Dockerfile.clean
          echo "--- File info ---"
          file Dockerfile.clean
          ls -la Dockerfile.clean
          chmod 644 Dockerfile.clean

      - name: Build and push Docker image
        run: |
          # Build the image
          docker build -t ghcr.io/drytrix/timetracker:main .
          
          # Push if not a PR
          if [ "${{ github.event_name }}" != "pull_request" ]; then
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker push ghcr.io/drytrix/timetracker:main
          fi

  # Multi-platform manifest job
  manifest:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Create and push manifest
        run: |
          # Build and push with latest tag
          docker build -t ghcr.io/drytrix/timetracker:latest .
          docker push ghcr.io/drytrix/timetracker:latest
